{
  "providers": {
    "openai": {
      "prompt_text": "**Task:** Assign items from a receipt to people based on a voice transcription.\n\n**Input:**\n1.  Voice Transcription (string)\n2.  Receipt Items (JSON list, where each item is an object with \"item\" (string name), \"quantity\" (integer), and \"price\" (float unit price). Example: [{\"item\": \"Burger\", \"quantity\": 2, \"price\": 10.50}, {\"item\": \"Fries\", \"quantity\": 1, \"price\": 3.00}])\n\n**Output:** Return ONLY a valid JSON object (no extra text or markdown) with the following structure:\n{\n  \"assignments\": { // Key is person's name\n    \"<person_name>\": [\n      {\n        \"name\": \"<item_name>\",\n        \"quantity\": <integer_assignment_quantity>,\n        \"price\": <float_unit_price_of_item> // Price of one unit of this item\n      }\n    ],\n    ...\n  },\n  \"shared_items\": [\n    {\n      \"name\": \"<item_name>\",\n      \"quantity\": <integer_shared_quantity>,\n      \"price\": <float_unit_price_of_item>, // Price of one unit of this item\n      \"people\": [\"<person1_name>\", \"<person2_name>\", ...] // List of people sharing this item\n    }\n  ],\n  \"unassigned_items\": [\n    {\n      \"name\": \"<item_name>\",\n      \"quantity\": <integer_unassigned_quantity>,\n      \"price\": <float_unit_price_of_item> // Price of one unit of this item\n    }\n  ]\n}\n\n**Assignment Rules:**\n1.  **Item Identification:** Identify items from the \"Receipt Items\" input list primarily by their \"item\" name. Be mindful of potential ambiguities if item names are very similar.\n2.  **Transcription Analysis:** Carefully parse the voice transcription to identify people and the items they claim or share.\n3.  **People:** Include ALL people mentioned in the transcription as keys in the \"assignments\" object, even if they claim no specific items (in which case their list of items will be empty).\n4.  **Completeness:** Every item from the input \"Receipt Items\" list must be accounted for. Assign the appropriate quantity of each item to a person, list it under \"shared_items\", or list any remaining quantity under \"unassigned_items\".\n5.  **Quantity Accuracy:**\n    *   The \"quantity\" in the output JSON for \"assignments\", \"shared_items\", and \"unassigned_items\" refers to the quantity being assigned to that specific person/group or left unassigned.\n    *   The sum of quantities for a specific item (identified by its unique \"name\" and \"price\" from the input) across all \"assignments\" (for all people), \"shared_items\", and \"unassigned_items\" must equal the original total quantity of that item in the input \"Receipt Items\" list.\n6.  **Price:** The \"price\" field in the output JSON should always be the *unit price* of the item, taken directly from the corresponding item in the \"Receipt Items\" input.\n7.  **Unclaimed Items:** If an item (or a portion of its quantity) from the \"Receipt Items\" input is not explicitly claimed by any person or marked as shared, it must be placed in the \"unassigned_items\" list.\n8.  **Shared Item People:** For \"shared_items\", the \"people\" list should accurately reflect who is sharing that specific quantity of the item.\n\nReturn *only* the JSON object."
    },
    "gemini": {
      "prompt_text": "**Task:** Assign items from a receipt to people based on a voice transcription.\n\n**Input:**\n1.  Voice Transcription (string)\n2.  Receipt Items (JSON list, where each item is an object with \"item\" (string name), \"quantity\" (integer), and \"price\" (float unit price). Example: [{\"item\": \"Burger\", \"quantity\": 2, \"price\": 10.50}, {\"item\": \"Fries\", \"quantity\": 1, \"price\": 3.00}])\n\n**Output:** Return ONLY a valid JSON object (no extra text or markdown) with the following structure:\n{\n  \"assignments\": { // Key is person's name\n    \"<person_name>\": [\n      {\n        \"name\": \"<item_name>\",\n        \"quantity\": <integer_assignment_quantity>,\n        \"price\": <float_unit_price_of_item> // Price of one unit of this item\n      }\n    ],\n    ...\n  },\n  \"shared_items\": [\n    {\n      \"name\": \"<item_name>\",\n      \"quantity\": <integer_shared_quantity>,\n      \"price\": <float_unit_price_of_item>, // Price of one unit of this item\n      \"people\": [\"<person1_name>\", \"<person2_name>\", ...] // List of people sharing this item\n    }\n  ],\n  \"unassigned_items\": [\n    {\n      \"name\": \"<item_name>\",\n      \"quantity\": <integer_unassigned_quantity>,\n      \"price\": <float_unit_price_of_item> // Price of one unit of this item\n    }\n  ]\n}\n\n**Assignment Rules:**\n1.  **Item Identification:** Identify items from the \"Receipt Items\" input list primarily by their \"item\" name. Be mindful of potential ambiguities if item names are very similar.\n2.  **Transcription Analysis:** Carefully parse the voice transcription to identify people and the items they claim or share.\n3.  **People:** Include ALL people mentioned in the transcription as keys in the \"assignments\" object, even if they claim no specific items (in which case their list of items will be empty).\n4.  **Completeness:** Every item from the input \"Receipt Items\" list must be accounted for. Assign the appropriate quantity of each item to a person, list it under \"shared_items\", or list any remaining quantity under \"unassigned_items\".\n5.  **Quantity Accuracy:**\n    *   The \"quantity\" in the output JSON for \"assignments\", \"shared_items\", and \"unassigned_items\" refers to the quantity being assigned to that specific person/group or left unassigned.\n    *   The sum of quantities for a specific item (identified by its unique \"name\" and \"price\" from the input) across all \"assignments\" (for all people), \"shared_items\", and \"unassigned_items\" must equal the original total quantity of that item in the input \"Receipt Items\" list.\n6.  **Price:** The \"price\" field in the output JSON should always be the *unit price* of the item, taken directly from the corresponding item in the \"Receipt Items\" input.\n7.  **Unclaimed Items:** If an item (or a portion of its quantity) from the \"Receipt Items\" input is not explicitly claimed by any person or marked as shared, it must be placed in the \"unassigned_items\" list.\n8.  **Shared Item People:** For \"shared_items\", the \"people\" list should accurately reflect who is sharing that specific quantity of the item.\n\nReturn *only* the JSON object."
    }
  }
} 