// Mocks generated by Mockito 5.4.6 from annotations
// in billfie/test/widgets/workflow_modal_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:io' as _i6;
import 'dart:ui' as _i7;

import 'package:billfie/models/receipt.dart' as _i3;
import 'package:billfie/providers/workflow_state.dart' as _i4;
import 'package:billfie/widgets/image_state_manager.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeImageStateManager_0 extends _i1.SmartFake
    implements _i2.ImageStateManager {
  _FakeImageStateManager_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReceipt_1 extends _i1.SmartFake implements _i3.Receipt {
  _FakeReceipt_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WorkflowState].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkflowState extends _i1.Mock implements _i4.WorkflowState {
  MockWorkflowState() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ImageStateManager get imageStateManager => (super.noSuchMethod(
        Invocation.getter(#imageStateManager),
        returnValue: _FakeImageStateManager_0(
          this,
          Invocation.getter(#imageStateManager),
        ),
      ) as _i2.ImageStateManager);

  @override
  List<String> get pendingDeletionGsUris => (super.noSuchMethod(
        Invocation.getter(#pendingDeletionGsUris),
        returnValue: <String>[],
      ) as List<String>);

  @override
  int get currentStep => (super.noSuchMethod(
        Invocation.getter(#currentStep),
        returnValue: 0,
      ) as int);

  @override
  String get restaurantName => (super.noSuchMethod(
        Invocation.getter(#restaurantName),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#restaurantName),
        ),
      ) as String);

  @override
  Map<String, dynamic> get parseReceiptResult => (super.noSuchMethod(
        Invocation.getter(#parseReceiptResult),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> get transcribeAudioResult => (super.noSuchMethod(
        Invocation.getter(#transcribeAudioResult),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> get assignPeopleToItemsResult => (super.noSuchMethod(
        Invocation.getter(#assignPeopleToItemsResult),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  List<String> get people => (super.noSuchMethod(
        Invocation.getter(#people),
        returnValue: <String>[],
      ) as List<String>);

  @override
  bool get hasParseData => (super.noSuchMethod(
        Invocation.getter(#hasParseData),
        returnValue: false,
      ) as bool);

  @override
  bool get hasTranscriptionData => (super.noSuchMethod(
        Invocation.getter(#hasTranscriptionData),
        returnValue: false,
      ) as bool);

  @override
  bool get hasAssignmentData => (super.noSuchMethod(
        Invocation.getter(#hasAssignmentData),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void goToStep(int? step) => super.noSuchMethod(
        Invocation.method(
          #goToStep,
          [step],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void nextStep() => super.noSuchMethod(
        Invocation.method(
          #nextStep,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void previousStep() => super.noSuchMethod(
        Invocation.method(
          #previousStep,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setRestaurantName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setRestaurantName,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setReceiptId(String? id) => super.noSuchMethod(
        Invocation.method(
          #setReceiptId,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setImageFile(_i6.File? file) => super.noSuchMethod(
        Invocation.method(
          #setImageFile,
          [file],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetImageFile() => super.noSuchMethod(
        Invocation.method(
          #resetImageFile,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setParseReceiptResult(Map<String, dynamic>? result) =>
      super.noSuchMethod(
        Invocation.method(
          #setParseReceiptResult,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTranscribeAudioResult(Map<String, dynamic>? result) =>
      super.noSuchMethod(
        Invocation.method(
          #setTranscribeAudioResult,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setAssignPeopleToItemsResult(Map<String, dynamic>? result) =>
      super.noSuchMethod(
        Invocation.method(
          #setAssignPeopleToItemsResult,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTip(double? value) => super.noSuchMethod(
        Invocation.method(
          #setTip,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTax(double? value) => super.noSuchMethod(
        Invocation.method(
          #setTax,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLoading(bool? loading) => super.noSuchMethod(
        Invocation.method(
          #setLoading,
          [loading],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorMessage(String? message) => super.noSuchMethod(
        Invocation.method(
          #setErrorMessage,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setUploadedGsUris(
    String? imageGsUri,
    String? thumbnailGsUri,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setUploadedGsUris,
          [
            imageGsUri,
            thumbnailGsUri,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLoadedImageUrls(
    String? imageUrl,
    String? thumbnailUrl,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setLoadedImageUrls,
          [
            imageUrl,
            thumbnailUrl,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setActualGsUrisOnLoad(
    String? imageGsUri,
    String? thumbnailGsUri,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setActualGsUrisOnLoad,
          [
            imageGsUri,
            thumbnailGsUri,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearPendingDeletions() => super.noSuchMethod(
        Invocation.method(
          #clearPendingDeletions,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addUriToPendingDeletions(String? uri) => super.noSuchMethod(
        Invocation.method(
          #addUriToPendingDeletions,
          [uri],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeUriFromPendingDeletions(String? uri) => super.noSuchMethod(
        Invocation.method(
          #removeUriFromPendingDeletions,
          [uri],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Receipt toReceipt() => (super.noSuchMethod(
        Invocation.method(
          #toReceipt,
          [],
        ),
        returnValue: _FakeReceipt_1(
          this,
          Invocation.method(
            #toReceipt,
            [],
          ),
        ),
      ) as _i3.Receipt);

  @override
  void clearParseAndSubsequentData() => super.noSuchMethod(
        Invocation.method(
          #clearParseAndSubsequentData,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearTranscriptionAndSubsequentData() => super.noSuchMethod(
        Invocation.method(
          #clearTranscriptionAndSubsequentData,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearAssignmentAndSubsequentData() => super.noSuchMethod(
        Invocation.method(
          #clearAssignmentAndSubsequentData,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
